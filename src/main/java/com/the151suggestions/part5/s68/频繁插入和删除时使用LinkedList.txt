ArrayList 与 LinkedList 的区别？
ArrayList:
1.底层结构是数组
2.支持随机访问,实现了RandomAccess接口(随机存取接口)
3.每次扩容1.5倍
4.遍历时使用普通for循环效率高
5.查询快(直接根据下标获取目标值),
  修改快(根据给定下标,用新值覆盖旧值)
6.插入慢(插入一个元素,其后的元素都会后移一位,虽然arraycopy是本地方法,效率高,但每次插入,后面的元素都要拷贝一遍,效率就低了)
  删除慢(和插入类似,每删除一个元素,后面的元素都向前移动一位)
LinkedList:
1.底层结构是双向链表
2.不支持随机访问
3.遍历时使用foreach循环效率高
4.查询慢(取值时先判断输入的下标与中间值(size >> 1,右移一位,即除以2)的关系,小于中间值则从头开始正向搜索,大于中间值则从尾节点反向搜索,调用get(index)方法就相当于”遍历”)
  修改慢(修改指定位置元素时,先查询,查询时是半遍历,效率低.)
5.插入快(插入只是修改相邻元素的next,previous引用.)
  删除快(双向链表的标准删除方法,全都是引用指针的变更)
6.间接继承Queue接口